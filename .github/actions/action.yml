name: Setup AtomiCloud CI Nix
description: "Setup AtomiCloud CI Nix (Compatible with Namespace)"
inputs:
  namespacelabs:
    default: "true"
    description: "Using Namespace Lab's runners"
  checkout:
    default: "true"
    description: "Whether to checkout the repository"
  short-length:
    default: 7
    description: length for short values
  auth-bot-app-id:
    description: App Id for auth bot
  auth-bot-secret-key:
    description: Private key for auth bot
branding:
  color: blue
  icon: settings

runs:
  using: "composite"
  steps:
    - name: Inject enhanced GitHub environment variables
      uses: rlespinasse/github-slug-action@v5.x
      with:
        short-length: 7
    # NAMESPACE LAB VERSION
    - name: Checkout Repository
      if: inputs.namespacelabs == 'true' && inputs.checkout == 'true'
      shell: bash
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: inputs.auth-bot-app-id
        private-key: inputs.auth-bot-secret-key
    - uses: namespacelabs/nscloud-checkout-action@v5
      with:
        fetch-depth: 0
        token: ${{ steps.app-token.outputs.token}}
    - run: |
        git config user.name auth-bot
        git config user.email auth-bot@atomi.cloud

    - name: Setup Nix Folder
      shell: bash
      if: inputs.namespacelabs == 'true'
      run: |
        sudo mkdir /nix
        sudo chown $USER /nix
    - name: Cache Nix
      uses: namespacelabs/nscloud-cache-action@v1
      if: inputs.namespacelabs == 'true'
      with:
        path: /nix
    - name: Install Nix
      if: inputs.namespacelabs == 'true'
      uses: cachix/install-nix-action@v30

    # NATIVE VERSION
    - name: Checkout Repository
      if: inputs.namespacelabs == 'false' && inputs.checkout == 'true'
      shell: bash
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: inputs.auth-bot-app-id
        private-key: inputs.auth-bot-secret-key
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.app-token.outputs.token }}
    - run: |
        git config user.name auth-bot
        git config user.email auth-bot@atomi.cloud
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      if: inputs.namespacelabs == 'false'
    - name: Cache Nix
      uses: DeterminateSystems/magic-nix-cache-action@main
      if: inputs.namespacelabs == 'false'
